#
# Properties used by TargetPlatformFactory to create platform specific implementations of interfaces.
#
# The format is as follows:
#
# <interface>[,name[,arch]] = <implementation>
#
# Where:
# . interface      - is the fully qualified interface
# . name           - is the platform name corresponding to those defined in com.izforge.izpack.util.Platforms, as lowercase
# . arch           - is the platform architecture corresponding to com.izforge.izpack.api.Platform.Arch, as lowercase
# . implementation - is the implementation of the interface for the OS version
#
# E.g.:
# com.izforge.izpack.util.os.NativeWrapper,windows = com.izforge.izpack.util.os.WinWrapper
# com.izforge.izpack.util.os.NativeWrapper,windows,x64 = com.izforge.izpack.util.os.Win64Wrapper
# com.izforge.izpack.util.os.NativeWrapper,windows_xp = com.izforge.izpack.util.os.Windows7Wrapper
# com.izforge.izpack.util.os.NativeWrapper,windows_7,x86 = com.izforge.izpack.util.os.Windows7x86Wrapper
# com.izforge.izpack.util.os.NativeWrapper,windows_7,x64 = com.izforge.izpack.util.os.Windows7x64Wrapper
# com.izforge.izpack.util.os.NativeWrapper,unix = com.izforge.izpack.util.os.GenericUnixWrapper
# com.izforge.izpack.util.os.NativeWrapper,debian_linux = com.izforge.izpack.util.os.DebianLinuxWrapper
# com.izforge.izpack.util.os.NativeWrapper,mac_osx = com.izforge.izpack.util.os.MacOSXWrapper
# com.izforge.izpack.util.os.NativeWrapper = com.izforge.izpack.util.os.DefaultWrapper

#
# Configures platform specific shortcuts
#
com.izforge.izpack.util.os.Shortcut,windows = com.izforge.izpack.util.os.Win_Shortcut
com.izforge.izpack.util.os.Shortcut,unix    = com.izforge.izpack.util.os.Unix_Shortcut
com.izforge.izpack.util.os.Shortcut         = com.izforge.izpack.util.os.Shortcut

#
# Configures platform specific registry handling
#
com.izforge.izpack.core.os.RegistryHandler,windows = com.izforge.izpack.util.os.Win_RegistryHandler
com.izforge.izpack.core.os.RegistryHandler = com.izforge.izpack.core.os.RegistryHandler

