#encoding=UTF-8
#********************************************************************
#Wrapper Properties
#********************************************************************

wrapper.working.dir=%WRAPPER_BIN_DIR%/../../

#include ../../conf/wrapper-license.conf

#Java Application
set.JAVA_HOME=${wrapper.java.home}
wrapper.java.command=%JAVA_HOME%/bin/java

#Java Main class.  This class must implement the WrapperListener interface
#or guarantee that the WrapperManager class is initialized.  Helper
#classes are provided to do this for you.  See the Integration section
#of the documentation for details.
wrapper.java.mainclass=my.application.ApplicationJSW

#Java Classpath (include wrapper.jar)  Add class path elements as
#needed starting from 1
#Work directory is where wrapper executable is situated
wrapper.java.classpath.1=lib/wrapper/*.jar
wrapper.java.classpath.2=lib/shared/*.jar
wrapper.java.classpath.3=lib/server/*.jar

#Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%WRAPPER_BIN_DIR%

#Java Additional Parameters
wrapper.java.additional.1=-Dlog4j.configuration=file:config/log4j.xml
wrapper.java.additional.2=-XX:+HeapDumpOnOutOfMemoryError
wrapper.java.additional.3=-Djava.io.tmpdir=temp

#Initial Java Heap Size (in MB)
wrapper.java.initmemory=256
wrapper.java.maxmemory=2048

#Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=-Dstdin.commands=false

#********************************************************************
#Wrapper Logging Properties
#********************************************************************
#Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

#Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

#Log file to use for wrapper output logging.

wrapper.logfile=log/app_wrapper.log
#Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

#Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

#Maximum size that the log file will be allowed to grow to before
#the log is rolled. Size is specified in bytes.  The default value
#of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#'m' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=4m

#Maximum number of rolled log files which will be allowed before old
#files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=10

#Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#Number of seconds to allow between the time that the Wrapper launches
#the JVM process and the time that the JVM side of the Wrapper responds
#that the application has started. 0 means never time out. Defaults to 30 seconds.
wrapper.startup.timeout=600

#********************************************************************
#Wrapper NT Service Properties
#********************************************************************
#WARNING - Do not modify any of these properties when an application
#using this configuration file has been installed as a service.
#Please uninstall the service before modifying this section.  The
#service can then be reinstalled.

#Name of the service
wrapper.ntservice.name=${service.name}

#Display name of the service
wrapper.ntservice.displayname=${service.description.short}

#Description of the service
wrapper.ntservice.description=${service.description.long}

#Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=Tcpip

#Mode in which the service is installed.  AUTO_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

#Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

#Automatic restart on System.exit(n!=0)
wrapper.on_exit.default=RESTART
wrapper.on_exit.0=SHUTDOWN
